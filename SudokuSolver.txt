class Solution {
public:
    bool isValid(vector<vector<int>>& mat,int x,int y,int val)
    {
        for(int j=0;j<mat[0].size();j++)
        {
            if(mat[x][j]==val)
            {
                return false;
            }
        }
        for(int i=0;i<mat.size();i++)
        {
            if(mat[i][y]==val)
            {
                return false;
            }
        }
        
        int smi=(x/3) *3;
        int smj= (y/3 )*3;
        for(int i=0;i<3;i++)
        {
            for(int j=0;j<3;j++)
            {
                if(mat[smi+i][smj+j]==val)
                    return false;
            }
        }
        
        return true;
    }
    bool solve(vector<vector<int>>& mat,int i,int j)
     {  if(i==9)
		return true;
		if(j==9)
		return solve(mat,i+1,0);
		if(mat[i][j]!=0)
		return solve(mat,i,j+1);
		for(int no=1;no<=9;no++){
			if(isValid(mat,i,j,no)){
				mat[i][j]=no;
				if(solve(mat,i,j+1))
				return true;
			}
		}
		mat[i][j]=0;
		return false;
                   
     }
    void solveSudoku(vector<vector<char>>& board) {
       vector<vector<int>> mat(9,vector<int>(9));
		for(int i=0;i<9;i++){
			for(int j=0;j<9;j++){
				if(board[i][j]=='.')
				mat[i][j]=0;
				else
				mat[i][j]=board[i][j]-48;
			}
		}
		solve(mat,0,0);
		for(int i=0;i<9;i++)
    {
			for(int j=0;j<9;j++)
    {
				board[i][j]=mat[i][j]+48;
        
        
    }   
    }
    }
};