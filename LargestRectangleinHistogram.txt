class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        
        int l=heights.size();
        vector<int> right(l);
        
        right[l-1]=l;
        stack<int> st;
        st.push(l-1);
        
        for(int i=l-2;i>=0;i--)
        {
            while(st.size()>0 && (heights[i]<=heights[st.top()]))
            {
                st.pop();
            }
            if(st.size()==0)
            {
                right[i]=l;
            }
            else
            {
                right[i]=st.top();
            }
            
            st.push(i);
            
            
        }
        
        
        
        vector<int> left(l);
        
        left[0]=-1;
        stack<int> s;
        s.push(0);
        
        for(int i=1;i<l;i++)
        {
            while(s.size()>0 && (heights[i]<=heights[s.top()]))
            {
                s.pop();
            }
            if(s.size()==0)
            {
                left[i]=-1;
            }
            else
            {
                left[i]=s.top();
            }
            
            s.push(i);
            
            
        }
        
        int maxarea=-1;
        for(int i=0;i<l;i++)
        {   int width= right[i]-left[i]-1;
            int area=width*heights[i];
            if(area>maxarea)
            {
                maxarea=area;
                
            }
            
        }
        
       return maxarea;
    }
};